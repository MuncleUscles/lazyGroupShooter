import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.BasicGame;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;
  
public class SimpleGame extends BasicGame{
  Image land = null;
	Image plane = null;
	float x = 200;
	float y = 100;
	float scale = 1.0f;
	Image plane2 = null;
	float a = 900;
	float b = 700;
    public SimpleGame()
    {
        super("Slick2DPath2Glory - SimpleGame");
    }
  
    @Override
    public void init(GameContainer gc)
            throws SlickException {
    	land = new Image("/afs/inf.ed.ac.uk/user/s12/s1225015/Basic_slick_game_background.jpg");
    	plane = new Image("/afs/inf.ed.ac.uk/user/s12/s1225015/Basic_slick_game_plane.png");
    	plane2 = new Image("/afs/inf.ed.ac.uk/user/s12/s1225015/Basic_slick_game_plane.png");
    }
  
    @Override
    public void update(GameContainer gc, int delta)
            throws SlickException    
    {
    	Input input = gc.getInput();
    	  
        if(input.isKeyDown(Input.KEY_A))
        {
            plane.rotate(-0.2f * delta);
        }
  
        if(input.isKeyDown(Input.KEY_D))
        {
            plane.rotate(0.2f * delta);
        }
  
        if(input.isKeyDown(Input.KEY_W))
        {
            float hip = 0.4f * delta;
  
            float rotation = plane.getRotation();
  
            x+= hip * Math.sin(Math.toRadians(rotation));
            y-= hip * Math.cos(Math.toRadians(rotation));
        }
  
        if(input.isKeyDown(Input.KEY_2))
        {
            scale += (scale >= 5.0f) ? 0 : 0.1f;
            plane.setCenterOfRotation(plane.getWidth()/2.0f*scale, plane.getHeight()/2.0f*scale);
        }
        if(input.isKeyDown(Input.KEY_1))
        {
            scale -= (scale <= 1.0f) ? 0 : 0.1f;
            plane.setCenterOfRotation(plane.getWidth()/2.0f*scale, plane.getHeight()/2.0f*scale);
        }
        if(input.isKeyDown(Input.KEY_J))
        {
            plane2.rotate(-0.2f * delta);
        }
  
        if(input.isKeyDown(Input.KEY_L))
        {
            plane2.rotate(0.2f * delta);
        }
  
        if(input.isKeyDown(Input.KEY_I))
        {
            float hip = 0.4f * delta;
  
            float rotation = plane2.getRotation();
  
            a+= hip * Math.sin(Math.toRadians(rotation));
            b-= hip * Math.cos(Math.toRadians(rotation));
        }
  
        if(input.isKeyDown(Input.KEY_2))
        {
            scale += (scale >= 5.0f) ? 0 : 0.1f;
            plane2.setCenterOfRotation(plane2.getWidth()/2.0f*scale, plane2.getHeight()/2.0f*scale);
        }
        if(input.isKeyDown(Input.KEY_1))
        {
            scale -= (scale <= 1.0f) ? 0 : 0.1f;
            plane2.setCenterOfRotation(plane2.getWidth()/2.0f*scale, plane2.getHeight()/2.0f*scale);
        }
    }
  
    public void render(GameContainer gc, Graphics g)
            throws SlickException
    {
    	land.draw(0, 0);
    	land.draw(800,0);
    	land.draw(0,600);
    	land.draw(800,600);
    	plane.draw(x, y, scale);
    	plane2.draw(a, b, scale);
    }
  
    public static void main(String[] args)
            throws SlickException
    {
         AppGameContainer app =
            new AppGameContainer(new SimpleGame());
  
         app.setDisplayMode(1200, 1000, false);
         app.start();
    }
}
